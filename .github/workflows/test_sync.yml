   
name: Sync staging with master (create PR)
on:
  push:
    branches:
      - master
jobs:
  sync-branches:
    runs-on: ubuntu-latest
    name: Syncing branches - staging
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2

      - name: Opening pull request
        id: pullrequest
        uses: tretuna/sync-branches@1.4.0
        with:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          FROM_BRANCH: "master"
          TO_BRANCH: "staging"
          PULL_REQUEST_TITLE: "[sync-branches] Sync `staging` with `master`"
          REVIEWERS: '["jgsogo"]'

      # - name: Enable automerge (MERGE)
      #   run: |
      #     echo "(${{ steps.pullrequest.outputs.PULL_REQUEST_NUMBER }}) ${{ steps.pullrequest.outputs.PULL_REQUEST_URL }}"
      #     curl -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" -X POST -d "mutation { enablePullRequestAutoMerge(input: {pullRequestId: \"PR_kwDOHN6q7c44Yxn_\", mergeMethod: MERGE}) {clientMutationId}}" https://api.github.com/graphql

      - name: Enable automerge (MERGE)
        uses: actions/github-script@v6
        with:
          script: |
            // Get pull-request node_id from number
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ steps.pullrequest.outputs.PULL_REQUEST_NUMBER }}
            });
            console.log(pr)

            // Enable auto-merge
            //const query = `mutation($prId:ID!) { 
            //    enablePullRequestAutoMerge(input: {pullRequestId:$prId, mergeMethod: MERGE}) {
            //      clientMutationId
            //    }
            //}`;
            //const variables = {
            //  prId: pr.node_id
            //}
            //const result = await github.graphql(query, variables)
            //console.log(result)
